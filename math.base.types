; GENERATED BY CHICKEN 5.2.0 FROM base/math.base.constants.scm

(math.base.constants#gamma.0 float)

(math.base.constants#catalan.0 float)

(math.base.constants#phi.0 float)

(math.base.constants#euler.0 float)

; END OF FILE
; GENERATED BY CHICKEN 5.2.0 FROM base/math.base.functions.scm

(math.base.functions#acosh
  (#(procedure) math.base.functions#acosh (number) number))

(math.base.functions#absolute-error
  (#(procedure)
   math.base.functions#absolute-error
   ((or integer float ratnum) (or integer float ratnum))
   (or integer float ratnum)))

(math.base.functions#power-of-two?
  (#(procedure)
   math.base.functions#power-of-two?
   ((or integer float ratnum))
   boolean))

(math.base.functions#relative-error
  (#(procedure)
   math.base.functions#relative-error
   ((or integer float ratnum) (or integer float ratnum))
   (or integer float ratnum)))

(math.base.functions#sum
  (#(procedure)
   math.base.functions#sum
   ((list-of (or integer float ratnum)))
   (or integer float ratnum)))

(math.base.functions#asinh
  (#(procedure) math.base.functions#asinh (number) number))

(math.base.functions#float-complex?
  (#(procedure) math.base.functions#float-complex? (*) boolean))

(math.base.functions#atanh
  (#(procedure) math.base.functions#atanh (number) number))

(math.base.functions#number->float-complex
  (#(procedure) math.base.functions#number->float-complex (number) cplxnum))

; END OF FILE
; GENERATED BY CHICKEN 5.2.0 FROM base/math.base.random.scm

(math.base.random#random-natural
  (#(procedure) math.base.random#random-natural (integer) integer))

(math.base.random#random-bits
  (#(procedure) math.base.random#random-bits (integer) integer))

(math.base.random#random-integer
  (#(procedure) math.base.random#random-integer (integer integer) integer))

; END OF FILE
